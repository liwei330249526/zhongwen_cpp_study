#include <iostream>
using namespace std;

int main(){
    int n = 100, m = 200;
    int *p1 = &(m + n);    //m + n 的结果为 300
    int *p2 = &(n + 100);  //n + 100 的结果为 200
    bool *p4 = &(m < n);   //m < n 的结果为 false

    return 0;
}

//error: lvalue required as unary ‘&’ operand

//这些表达式的结果都会被放到寄存器中，尝试用&获取它们的地址都是错误的。

//其实 C++ 代码中的大部分内容都是放在内存中的，例如定义的变量、创建的对象、字符串常量、函数形参、函数体本身、new或malloc()分配的内存等，
// 这些内容都可以用&来获取地址，进而用指针指向它们。除此之外，还有一些我们平时不太留意的临时数据，例如表达式的结果、函数的返回值等，
// 它们可能会放在内存中，也可能会放在寄存器中。一旦它们被放到了寄存器中，就没法用&获取它们的地址了，也就没法用指针指向它们了。
//